name: Build Binaries

on:
  workflow_dispatch:
    inputs:
      coolprop_version:
        required: true
        description: "CoolProp version"
        default: "v6.8.0"

jobs:
  build-binaries:
    name: Build Binaries (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-13, ubuntu-latest ]
      fail-fast: false

    steps:
      - name: Checkout CoolProp repository
        uses: actions/checkout@v5
        with:
          repository: CoolProp/CoolProp
          ref: ${{ github.event.inputs.coolprop_version }}
          submodules: recursive
      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 9.0.x
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Setup Mono
        if: runner.os == 'Linux'
        run: |
          sudo apt install ca-certificates gnupg
          sudo gpg --homedir /tmp --no-default-keyring --keyring /usr/share/keyrings/mono-official-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
          echo "deb [signed-by=/usr/share/keyrings/mono-official-archive-keyring.gpg] https://download.mono-project.com/repo/ubuntu stable-focal main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
          sudo apt update
          sudo apt install mono-devel
      - name: Setup SWIG
        if: runner.os == 'macOS'
        run: brew install swig
      - name: Restore Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install six
      - name: Build a Makefile using CMake
        run: cmake . -DCOOLPROP_CSHARP_MODULE=ON -DCMAKE_BUILD_TYPE=Release
      - name: Build CoolProp Binaries
        run: cmake --build . --config Release
      - name: Rename DLL
        if: runner.os == 'Windows'
        shell: bash
        run: |
          mv Release/CoolProp.dll ./
          mv CoolProp.dll libCoolProp.dll
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: CoolProp ${{ github.event.inputs.coolprop_version }} (${{ runner.os }})
          path: |
            *.dll
            *.dylib
            *.so
            platform-independent.7z
          if-no-files-found: error
