//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace CoolProp
{
  public class SsatSimpleState : SimpleState
  {
    private global::System.Runtime.InteropServices.HandleRef swigCPtr;

    internal SsatSimpleState(global::System.IntPtr cPtr, bool cMemoryOwn) : base(
      CPInvoke.SsatSimpleState_SWIGUpcast(cPtr), cMemoryOwn)
    {
      swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
    }

    internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SsatSimpleState obj)
    {
      return (obj == null)
        ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero)
        : obj.swigCPtr;
    }

    protected override void Dispose(bool disposing)
    {
      lock (this)
      {
        if (swigCPtr.Handle != global::System.IntPtr.Zero)
        {
          if (swigCMemOwn)
          {
            swigCMemOwn = false;
            CPInvoke.delete_SsatSimpleState(swigCPtr);
          }

          swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
        }

        base.Dispose(disposing);
      }
    }

    public SsatSimpleState.SsatSimpleStateEnum exists
    {
      set
      {
        CPInvoke.SsatSimpleState_exists_set(swigCPtr, (int) value);
        if (CPInvoke.SWIGPendingException.Pending) throw CPInvoke.SWIGPendingException.Retrieve();
      }
      get
      {
        SsatSimpleState.SsatSimpleStateEnum ret =
          (SsatSimpleState.SsatSimpleStateEnum) CPInvoke.SsatSimpleState_exists_get(swigCPtr);
        if (CPInvoke.SWIGPendingException.Pending) throw CPInvoke.SWIGPendingException.Retrieve();
        return ret;
      }
    }

    public SsatSimpleState() : this(CPInvoke.new_SsatSimpleState(), true)
    {
      if (CPInvoke.SWIGPendingException.Pending) throw CPInvoke.SWIGPendingException.Retrieve();
    }

    public enum SsatSimpleStateEnum
    {
      SSAT_MAX_NOT_SET = 0,
      SSAT_MAX_DOESNT_EXIST,
      SSAT_MAX_DOES_EXIST
    }
  }
}
